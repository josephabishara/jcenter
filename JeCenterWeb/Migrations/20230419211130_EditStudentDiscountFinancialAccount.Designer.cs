// <auto-generated />
using System;
using JeCenterWeb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JeCenterWeb.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230419211130_EditStudentDiscountFinancialAccount")]
    partial class EditStudentDiscountFinancialAccount
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JeCenterWeb.Models.ApplicationRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("JeCenterWeb.Models.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int>("AccountID")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FamilyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FristName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("ParentJob")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentMobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Pwd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("School")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("UserTypeId")
                        .HasColumnType("int");

                    b.Property<string>("imgurl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("online")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("JeCenterWeb.Models.CApplicationsValue", b =>
                {
                    b.Property<int>("ApplicationValueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicationValueId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("ApplicationValue")
                        .HasColumnType("int");

                    b.Property<int?>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteId")
                        .HasColumnType("int");

                    b.Property<int?>("Deleted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PhaseId")
                        .HasColumnType("int");

                    b.Property<int>("PhysicalyearId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Writed")
                        .HasColumnType("int");

                    b.HasKey("ApplicationValueId");

                    b.HasIndex("PhaseId");

                    b.HasIndex("PhysicalyearId");

                    b.ToTable("CApplicationsValue");
                });

            modelBuilder.Entity("JeCenterWeb.Models.CBranch", b =>
                {
                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BranchId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteId")
                        .HasColumnType("int");

                    b.Property<int?>("Deleted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoomsCount")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Writed")
                        .HasColumnType("int");

                    b.HasKey("BranchId");

                    b.ToTable("CBranch");
                });

            modelBuilder.Entity("JeCenterWeb.Models.CDepartment", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteId")
                        .HasColumnType("int");

                    b.Property<int?>("Deleted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Writed")
                        .HasColumnType("int");

                    b.HasKey("DepartmentId");

                    b.ToTable("CDepartment");
                });

            modelBuilder.Entity("JeCenterWeb.Models.CGroupSchedule", b =>
                {
                    b.Property<int>("GroupscheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupscheduleId"));

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LectureDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LectureNo")
                        .HasColumnType("int");

                    b.Property<string>("MonthCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GroupscheduleId");

                    b.HasIndex("GroupId");

                    b.ToTable("CGroupSchedule");
                });

            modelBuilder.Entity("JeCenterWeb.Models.CGroups", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CenterFee")
                        .HasColumnType("int");

                    b.Property<int?>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DayOfWeekId")
                        .HasColumnType("int");

                    b.Property<int?>("DeleteId")
                        .HasColumnType("int");

                    b.Property<int?>("Deleted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FirstDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupNo")
                        .HasColumnType("int");

                    b.Property<int>("LecturePrice")
                        .HasColumnType("int");

                    b.Property<int?>("ResourceGenderGenderId")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceFee")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("SessionEnd")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("SessionStart")
                        .HasColumnType("time");

                    b.Property<int>("SyllabusID")
                        .HasColumnType("int");

                    b.Property<int>("TeacherFee")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<string>("TeacherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Writed")
                        .HasColumnType("int");

                    b.Property<int>("physicalyearId")
                        .HasColumnType("int");

                    b.HasKey("GroupId");

                    b.HasIndex("DayOfWeekId");

                    b.HasIndex("ResourceGenderGenderId");

                    b.HasIndex("RoomId");

                    b.HasIndex("SyllabusID");

                    b.HasIndex("TeacherId");

                    b.HasIndex("physicalyearId");

                    b.ToTable("CGroups");
                });

            modelBuilder.Entity("JeCenterWeb.Models.CPhases", b =>
                {
                    b.Property<int>("PhaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PhaseId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("ApplicationValue")
                        .HasColumnType("int");

                    b.Property<int?>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteId")
                        .HasColumnType("int");

                    b.Property<int?>("Deleted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Parent")
                        .HasColumnType("int");

                    b.Property<string>("PhaseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Writed")
                        .HasColumnType("int");

                    b.Property<string>("imgurl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PhaseId");

                    b.ToTable("CPhases");
                });

            modelBuilder.Entity("JeCenterWeb.Models.CRooms", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("Capacity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteId")
                        .HasColumnType("int");

                    b.Property<int?>("Deleted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Floor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Writed")
                        .HasColumnType("int");

                    b.HasKey("RoomId");

                    b.HasIndex("BranchId");

                    b.ToTable("CRooms");
                });

            modelBuilder.Entity("JeCenterWeb.Models.CSyllabus", b =>
                {
                    b.Property<int>("SyllabusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SyllabusID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteId")
                        .HasColumnType("int");

                    b.Property<int?>("Deleted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PhaseID")
                        .HasColumnType("int");

                    b.Property<string>("SyllabusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Writed")
                        .HasColumnType("int");

                    b.Property<string>("imgurl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SyllabusID");

                    b.HasIndex("PhaseID");

                    b.ToTable("CSyllabus");
                });

            modelBuilder.Entity("JeCenterWeb.Models.Cardwrite", b =>
                {
                    b.Property<int>("Cardwriteid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cardwriteid"));

                    b.Property<int>("CardCount")
                        .HasColumnType("int");

                    b.Property<int>("Cardvalue")
                        .HasColumnType("int");

                    b.Property<bool>("Printed")
                        .HasColumnType("bit");

                    b.HasKey("Cardwriteid");

                    b.ToTable("Cardwrite");
                });

            modelBuilder.Entity("JeCenterWeb.Models.ChargingCard", b =>
                {
                    b.Property<int>("ChargingCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChargingCardId"));

                    b.Property<string>("CardCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CardValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Cardwriteid")
                        .HasColumnType("int");

                    b.Property<DateTime>("ChargingDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.HasKey("ChargingCardId");

                    b.ToTable("ChargingCard");
                });

            modelBuilder.Entity("JeCenterWeb.Models.ElRa3yNews", b =>
                {
                    b.Property<int>("ElRa3yNewsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ElRa3yNewsId"));

                    b.Property<string>("ParagraphNews")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitelNews")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ElRa3yNewsId");

                    b.ToTable("ElRa3yNews");
                });

            modelBuilder.Entity("JeCenterWeb.Models.FinancialAccount", b =>
                {
                    b.Property<int>("FinancialAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FinancialAccountId"));

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AccountTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteId")
                        .HasColumnType("int");

                    b.Property<int?>("Deleted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Writed")
                        .HasColumnType("int");

                    b.HasKey("FinancialAccountId");

                    b.ToTable("FinancialAccount");
                });

            modelBuilder.Entity("JeCenterWeb.Models.FinancialDocuments", b =>
                {
                    b.Property<int>("FinancialDocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FinancialDocumentId"));

                    b.Property<int>("AccountID")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteId")
                        .HasColumnType("int");

                    b.Property<int?>("Deleted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("JournalEntryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MovementTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TreasuryID")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Writed")
                        .HasColumnType("int");

                    b.Property<int>("physicalyearId")
                        .HasColumnType("int");

                    b.HasKey("FinancialDocumentId");

                    b.ToTable("FinancialDocuments");
                });

            modelBuilder.Entity("JeCenterWeb.Models.FinancialJournalEntryLine", b =>
                {
                    b.Property<int>("JournalEntryDetilsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JournalEntryDetilsID"));

                    b.Property<int>("AccountID")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Credit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Debit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("DeleteId")
                        .HasColumnType("int");

                    b.Property<int?>("Deleted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FinancialDocumentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("JournalEntryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MovementTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Writed")
                        .HasColumnType("int");

                    b.Property<int>("physicalyearId")
                        .HasColumnType("int");

                    b.HasKey("JournalEntryDetilsID");

                    b.HasIndex("AccountID");

                    b.HasIndex("FinancialDocumentId");

                    b.HasIndex("MovementTypeId");

                    b.HasIndex("physicalyearId");

                    b.ToTable("FinancialJournalEntryLine");
                });

            modelBuilder.Entity("JeCenterWeb.Models.MovementType", b =>
                {
                    b.Property<int>("MovementTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovementTypeId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteId")
                        .HasColumnType("int");

                    b.Property<int?>("Deleted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MovementTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Writed")
                        .HasColumnType("int");

                    b.HasKey("MovementTypeId");

                    b.ToTable("MovementType");
                });

            modelBuilder.Entity("JeCenterWeb.Models.PhysicalYear", b =>
                {
                    b.Property<int>("PhysicalyearId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PhysicalyearId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteId")
                        .HasColumnType("int");

                    b.Property<int?>("Deleted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhysicalyearName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Writed")
                        .HasColumnType("int");

                    b.HasKey("PhysicalyearId");

                    b.ToTable("PhysicalYear");
                });

            modelBuilder.Entity("JeCenterWeb.Models.ResourceCity", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"));

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CityId");

                    b.ToTable("ResourceCity");
                });

            modelBuilder.Entity("JeCenterWeb.Models.ResourceDays", b =>
                {
                    b.Property<int>("DayOfWeekId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DayOfWeekId"));

                    b.Property<string>("DayOfWeekName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DayOfWeekId");

                    b.ToTable("ResourceDays");
                });

            modelBuilder.Entity("JeCenterWeb.Models.ResourceGender", b =>
                {
                    b.Property<int>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenderId"));

                    b.Property<string>("GenderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lecture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenderId");

                    b.ToTable("ResourceGender");
                });

            modelBuilder.Entity("JeCenterWeb.Models.ResourceMailbox", b =>
                {
                    b.Property<int>("MailboxId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MailboxId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AttachUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteId")
                        .HasColumnType("int");

                    b.Property<int?>("Deleted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MailBody")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MailDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MailFrom")
                        .HasColumnType("int");

                    b.Property<string>("MailSubject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MailTo")
                        .HasColumnType("int");

                    b.Property<bool>("Recived")
                        .HasColumnType("bit");

                    b.Property<bool>("RecivedDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Sent")
                        .HasColumnType("bit");

                    b.Property<bool>("SentDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("UpdateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Writed")
                        .HasColumnType("int");

                    b.HasKey("MailboxId");

                    b.ToTable("ResourceMailbox");
                });

            modelBuilder.Entity("JeCenterWeb.Models.ReviewsSchedule", b =>
                {
                    b.Property<int>("ReviewsScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewsScheduleId"));

                    b.Property<int>("CenterFee")
                        .HasColumnType("int");

                    b.Property<int>("LecturePrice")
                        .HasColumnType("int");

                    b.Property<string>("MonthCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReviewTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ReviewsScheduleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceFee")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("SessionEnd")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("SessionStart")
                        .HasColumnType("time");

                    b.Property<int>("SyllabusID")
                        .HasColumnType("int");

                    b.Property<int>("TeacherFee")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<int>("physicalyearId")
                        .HasColumnType("int");

                    b.HasKey("ReviewsScheduleId");

                    b.HasIndex("RoomId");

                    b.HasIndex("SyllabusID");

                    b.HasIndex("physicalyearId");

                    b.ToTable("ReviewsSchedule");
                });

            modelBuilder.Entity("JeCenterWeb.Models.StudentApplications", b =>
                {
                    b.Property<int>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicationId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteId")
                        .HasColumnType("int");

                    b.Property<int?>("Deleted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PhaseId")
                        .HasColumnType("int");

                    b.Property<int>("PhysicalyearId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Writed")
                        .HasColumnType("int");

                    b.HasKey("ApplicationId");

                    b.HasIndex("PhaseId");

                    b.HasIndex("PhysicalyearId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentApplications");
                });

            modelBuilder.Entity("JeCenterWeb.Models.StudentDiscount", b =>
                {
                    b.Property<int>("StudentDiscountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentDiscountId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("CenterDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteId")
                        .HasColumnType("int");

                    b.Property<int?>("Deleted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("LectureType")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Writed")
                        .HasColumnType("int");

                    b.Property<int>("physicalyearId")
                        .HasColumnType("int");

                    b.Property<decimal>("teacherDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("StudentDiscountId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentDiscount");
                });

            modelBuilder.Entity("JeCenterWeb.Models.StudentGroup", b =>
                {
                    b.Property<int>("StudentGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentGroupId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteId")
                        .HasColumnType("int");

                    b.Property<int?>("Deleted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Writed")
                        .HasColumnType("int");

                    b.HasKey("StudentGroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("StudentGroup");
                });

            modelBuilder.Entity("JeCenterWeb.Models.StudentLecture", b =>
                {
                    b.Property<int>("StudentLectureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentLectureId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("CenterDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteId")
                        .HasColumnType("int");

                    b.Property<int?>("Deleted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("LecturePrice")
                        .HasColumnType("int");

                    b.Property<int>("LectureType")
                        .HasColumnType("int");

                    b.Property<decimal>("Paided")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Printed")
                        .HasColumnType("int");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<int>("StudentIndex")
                        .HasColumnType("int");

                    b.Property<int>("StudentType")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Writed")
                        .HasColumnType("int");

                    b.Property<int>("scheduleId")
                        .HasColumnType("int");

                    b.Property<decimal>("teacherDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("StudentLectureId");

                    b.ToTable("StudentLecture");
                });

            modelBuilder.Entity("JeCenterWeb.Models.TeacherAssistant", b =>
                {
                    b.Property<int>("TeacherAssistantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherAssistantId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("AssistantId")
                        .HasColumnType("int");

                    b.Property<int?>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteId")
                        .HasColumnType("int");

                    b.Property<int?>("Deleted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Writed")
                        .HasColumnType("int");

                    b.HasKey("TeacherAssistantId");

                    b.ToTable("TeacherAssistant");
                });

            modelBuilder.Entity("JeCenterWeb.Models.TeacherGroups", b =>
                {
                    b.Property<int>("TeacherGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherGroupId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteId")
                        .HasColumnType("int");

                    b.Property<int?>("Deleted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Writed")
                        .HasColumnType("int");

                    b.HasKey("TeacherGroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("TeacherGroups");
                });

            modelBuilder.Entity("JeCenterWeb.Models.TeacherSyllabus", b =>
                {
                    b.Property<int>("TeacherSyllabusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherSyllabusId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteId")
                        .HasColumnType("int");

                    b.Property<int?>("Deleted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PhaseId")
                        .HasColumnType("int");

                    b.Property<int>("SyllabusID")
                        .HasColumnType("int");

                    b.Property<string>("SyllabusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Writed")
                        .HasColumnType("int");

                    b.HasKey("TeacherSyllabusId");

                    b.ToTable("TeacherSyllabus");
                });

            modelBuilder.Entity("JeCenterWeb.Models.TeachesVideos", b =>
                {
                    b.Property<int>("TeacheVideoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacheVideoId"));

                    b.Property<int>("CenterFee")
                        .HasColumnType("int");

                    b.Property<int>("LecturePrice")
                        .HasColumnType("int");

                    b.Property<int>("SyllabusID")
                        .HasColumnType("int");

                    b.Property<int>("TeacherFee")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<string>("VideoName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeacheVideoId");

                    b.HasIndex("SyllabusID");

                    b.ToTable("TeachesVideos");
                });

            modelBuilder.Entity("JeCenterWeb.Models.UsersBalance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SumCredit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SumDebit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UsersBalance");
                });

            modelBuilder.Entity("JeCenterWeb.Models.ViewModel.RoomGroupReviewsExamsScheduleViewModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("SessionEnd")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("SessionStart")
                        .HasColumnType("time");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RoomGroupReviewsExamsScheduleViewModel");
                });

            modelBuilder.Entity("JeCenterWeb.Models.WebAboutUS", b =>
                {
                    b.Property<int>("AboutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AboutId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteId")
                        .HasColumnType("int");

                    b.Property<int?>("Deleted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Paragraph_ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Writed")
                        .HasColumnType("int");

                    b.Property<string>("imgurl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AboutId");

                    b.ToTable("WebAboutUS");
                });

            modelBuilder.Entity("JeCenterWeb.Models.oldteacher", b =>
                {
                    b.Property<double>("TeacherID")
                        .HasColumnType("float");

                    b.Property<double>("Account")
                        .HasColumnType("float");

                    b.Property<double>("Active")
                        .HasColumnType("float");

                    b.Property<double?>("Mobile")
                        .HasColumnType("float");

                    b.Property<double>("PhasesID")
                        .HasColumnType("float");

                    b.Property<string>("TeacherEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeacherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeacherPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeacherID");

                    b.ToTable("oldteacher");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("JeCenterWeb.Models.CApplicationsValue", b =>
                {
                    b.HasOne("JeCenterWeb.Models.CPhases", "CPhases")
                        .WithMany("CApplicationsValue")
                        .HasForeignKey("PhaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JeCenterWeb.Models.PhysicalYear", "PhysicalYear")
                        .WithMany("CApplicationsValue")
                        .HasForeignKey("PhysicalyearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CPhases");

                    b.Navigation("PhysicalYear");
                });

            modelBuilder.Entity("JeCenterWeb.Models.CGroupSchedule", b =>
                {
                    b.HasOne("JeCenterWeb.Models.CGroups", "CGroups")
                        .WithMany("CGroupSchedule")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CGroups");
                });

            modelBuilder.Entity("JeCenterWeb.Models.CGroups", b =>
                {
                    b.HasOne("JeCenterWeb.Models.ResourceDays", "ResourceDays")
                        .WithMany("CGroups")
                        .HasForeignKey("DayOfWeekId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JeCenterWeb.Models.ResourceGender", null)
                        .WithMany("CGroups")
                        .HasForeignKey("ResourceGenderGenderId");

                    b.HasOne("JeCenterWeb.Models.CRooms", "CRooms")
                        .WithMany("CGroups")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JeCenterWeb.Models.CSyllabus", "CSyllabus")
                        .WithMany("CGroups")
                        .HasForeignKey("SyllabusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JeCenterWeb.Models.ApplicationUser", "Teacher")
                        .WithMany("CGroups")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JeCenterWeb.Models.PhysicalYear", "PhysicalYear")
                        .WithMany("CGroups")
                        .HasForeignKey("physicalyearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CRooms");

                    b.Navigation("CSyllabus");

                    b.Navigation("PhysicalYear");

                    b.Navigation("ResourceDays");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("JeCenterWeb.Models.CRooms", b =>
                {
                    b.HasOne("JeCenterWeb.Models.CBranch", "CBranch")
                        .WithMany("CRooms")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CBranch");
                });

            modelBuilder.Entity("JeCenterWeb.Models.CSyllabus", b =>
                {
                    b.HasOne("JeCenterWeb.Models.CPhases", "CPhases")
                        .WithMany("CSyllabus")
                        .HasForeignKey("PhaseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CPhases");
                });

            modelBuilder.Entity("JeCenterWeb.Models.FinancialJournalEntryLine", b =>
                {
                    b.HasOne("JeCenterWeb.Models.ApplicationUser", "Account")
                        .WithMany("FinancialJournalEntryLine")
                        .HasForeignKey("AccountID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JeCenterWeb.Models.FinancialDocuments", "FinancialDocuments")
                        .WithMany("FinancialJournalEntryLine")
                        .HasForeignKey("FinancialDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JeCenterWeb.Models.MovementType", "MovementType")
                        .WithMany("FinancialJournalEntryLine")
                        .HasForeignKey("MovementTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JeCenterWeb.Models.PhysicalYear", "PhysicalYear")
                        .WithMany("FinancialJournalEntryLine")
                        .HasForeignKey("physicalyearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("FinancialDocuments");

                    b.Navigation("MovementType");

                    b.Navigation("PhysicalYear");
                });

            modelBuilder.Entity("JeCenterWeb.Models.ReviewsSchedule", b =>
                {
                    b.HasOne("JeCenterWeb.Models.CRooms", "CRooms")
                        .WithMany("ReviewsSchedule")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JeCenterWeb.Models.CSyllabus", "CSyllabus")
                        .WithMany("ReviewsSchedule")
                        .HasForeignKey("SyllabusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JeCenterWeb.Models.PhysicalYear", "PhysicalYear")
                        .WithMany("ReviewsSchedule")
                        .HasForeignKey("physicalyearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CRooms");

                    b.Navigation("CSyllabus");

                    b.Navigation("PhysicalYear");
                });

            modelBuilder.Entity("JeCenterWeb.Models.StudentApplications", b =>
                {
                    b.HasOne("JeCenterWeb.Models.CPhases", "CPhases")
                        .WithMany("StudentApplications")
                        .HasForeignKey("PhaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JeCenterWeb.Models.PhysicalYear", "PhysicalYear")
                        .WithMany("StudentApplications")
                        .HasForeignKey("PhysicalyearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JeCenterWeb.Models.ApplicationUser", "Student")
                        .WithMany("StudentApplications")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CPhases");

                    b.Navigation("PhysicalYear");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("JeCenterWeb.Models.StudentDiscount", b =>
                {
                    b.HasOne("JeCenterWeb.Models.FinancialAccount", "FinancialAccount")
                        .WithMany("StudentDiscount")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FinancialAccount");
                });

            modelBuilder.Entity("JeCenterWeb.Models.StudentGroup", b =>
                {
                    b.HasOne("JeCenterWeb.Models.CGroups", "CGroups")
                        .WithMany("StudentGroup")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CGroups");
                });

            modelBuilder.Entity("JeCenterWeb.Models.TeacherGroups", b =>
                {
                    b.HasOne("JeCenterWeb.Models.CGroups", "CGroups")
                        .WithMany("TeacherGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CGroups");
                });

            modelBuilder.Entity("JeCenterWeb.Models.TeachesVideos", b =>
                {
                    b.HasOne("JeCenterWeb.Models.CSyllabus", "CSyllabus")
                        .WithMany()
                        .HasForeignKey("SyllabusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CSyllabus");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("JeCenterWeb.Models.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("JeCenterWeb.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("JeCenterWeb.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("JeCenterWeb.Models.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JeCenterWeb.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("JeCenterWeb.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JeCenterWeb.Models.ApplicationUser", b =>
                {
                    b.Navigation("CGroups");

                    b.Navigation("FinancialJournalEntryLine");

                    b.Navigation("StudentApplications");
                });

            modelBuilder.Entity("JeCenterWeb.Models.CBranch", b =>
                {
                    b.Navigation("CRooms");
                });

            modelBuilder.Entity("JeCenterWeb.Models.CGroups", b =>
                {
                    b.Navigation("CGroupSchedule");

                    b.Navigation("StudentGroup");

                    b.Navigation("TeacherGroups");
                });

            modelBuilder.Entity("JeCenterWeb.Models.CPhases", b =>
                {
                    b.Navigation("CApplicationsValue");

                    b.Navigation("CSyllabus");

                    b.Navigation("StudentApplications");
                });

            modelBuilder.Entity("JeCenterWeb.Models.CRooms", b =>
                {
                    b.Navigation("CGroups");

                    b.Navigation("ReviewsSchedule");
                });

            modelBuilder.Entity("JeCenterWeb.Models.CSyllabus", b =>
                {
                    b.Navigation("CGroups");

                    b.Navigation("ReviewsSchedule");
                });

            modelBuilder.Entity("JeCenterWeb.Models.FinancialAccount", b =>
                {
                    b.Navigation("StudentDiscount");
                });

            modelBuilder.Entity("JeCenterWeb.Models.FinancialDocuments", b =>
                {
                    b.Navigation("FinancialJournalEntryLine");
                });

            modelBuilder.Entity("JeCenterWeb.Models.MovementType", b =>
                {
                    b.Navigation("FinancialJournalEntryLine");
                });

            modelBuilder.Entity("JeCenterWeb.Models.PhysicalYear", b =>
                {
                    b.Navigation("CApplicationsValue");

                    b.Navigation("CGroups");

                    b.Navigation("FinancialJournalEntryLine");

                    b.Navigation("ReviewsSchedule");

                    b.Navigation("StudentApplications");
                });

            modelBuilder.Entity("JeCenterWeb.Models.ResourceDays", b =>
                {
                    b.Navigation("CGroups");
                });

            modelBuilder.Entity("JeCenterWeb.Models.ResourceGender", b =>
                {
                    b.Navigation("CGroups");
                });
#pragma warning restore 612, 618
        }
    }
}
